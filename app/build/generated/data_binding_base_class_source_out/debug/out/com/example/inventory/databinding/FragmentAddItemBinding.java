// Generated by view binder compiler. Do not edit!
package com.example.inventory.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.inventory.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddItemBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText itemCount;

  @NonNull
  public final TextInputLayout itemCountLabel;

  @NonNull
  public final TextInputEditText itemName;

  @NonNull
  public final TextInputLayout itemNameLabel;

  @NonNull
  public final TextInputEditText itemPrice;

  @NonNull
  public final TextInputLayout itemPriceLabel;

  @NonNull
  public final Button saveAction;

  private FragmentAddItemBinding(@NonNull ScrollView rootView, @NonNull TextInputEditText itemCount,
      @NonNull TextInputLayout itemCountLabel, @NonNull TextInputEditText itemName,
      @NonNull TextInputLayout itemNameLabel, @NonNull TextInputEditText itemPrice,
      @NonNull TextInputLayout itemPriceLabel, @NonNull Button saveAction) {
    this.rootView = rootView;
    this.itemCount = itemCount;
    this.itemCountLabel = itemCountLabel;
    this.itemName = itemName;
    this.itemNameLabel = itemNameLabel;
    this.itemPrice = itemPrice;
    this.itemPriceLabel = itemPriceLabel;
    this.saveAction = saveAction;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_count;
      TextInputEditText itemCount = ViewBindings.findChildViewById(rootView, id);
      if (itemCount == null) {
        break missingId;
      }

      id = R.id.item_count_label;
      TextInputLayout itemCountLabel = ViewBindings.findChildViewById(rootView, id);
      if (itemCountLabel == null) {
        break missingId;
      }

      id = R.id.item_name;
      TextInputEditText itemName = ViewBindings.findChildViewById(rootView, id);
      if (itemName == null) {
        break missingId;
      }

      id = R.id.item_name_label;
      TextInputLayout itemNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (itemNameLabel == null) {
        break missingId;
      }

      id = R.id.item_price;
      TextInputEditText itemPrice = ViewBindings.findChildViewById(rootView, id);
      if (itemPrice == null) {
        break missingId;
      }

      id = R.id.item_price_label;
      TextInputLayout itemPriceLabel = ViewBindings.findChildViewById(rootView, id);
      if (itemPriceLabel == null) {
        break missingId;
      }

      id = R.id.save_action;
      Button saveAction = ViewBindings.findChildViewById(rootView, id);
      if (saveAction == null) {
        break missingId;
      }

      return new FragmentAddItemBinding((ScrollView) rootView, itemCount, itemCountLabel, itemName,
          itemNameLabel, itemPrice, itemPriceLabel, saveAction);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
