// Generated by view binder compiler. Do not edit!
package com.example.inventory.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.inventory.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentItemDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button deleteItem;

  @NonNull
  public final FloatingActionButton editItem;

  @NonNull
  public final TextView itemCount;

  @NonNull
  public final TextView itemCountLabel;

  @NonNull
  public final TextView itemName;

  @NonNull
  public final TextView itemPrice;

  @NonNull
  public final Button sellItem;

  private FragmentItemDetailBinding(@NonNull ConstraintLayout rootView, @NonNull Button deleteItem,
      @NonNull FloatingActionButton editItem, @NonNull TextView itemCount,
      @NonNull TextView itemCountLabel, @NonNull TextView itemName, @NonNull TextView itemPrice,
      @NonNull Button sellItem) {
    this.rootView = rootView;
    this.deleteItem = deleteItem;
    this.editItem = editItem;
    this.itemCount = itemCount;
    this.itemCountLabel = itemCountLabel;
    this.itemName = itemName;
    this.itemPrice = itemPrice;
    this.sellItem = sellItem;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentItemDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentItemDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_item_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentItemDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete_item;
      Button deleteItem = ViewBindings.findChildViewById(rootView, id);
      if (deleteItem == null) {
        break missingId;
      }

      id = R.id.edit_item;
      FloatingActionButton editItem = ViewBindings.findChildViewById(rootView, id);
      if (editItem == null) {
        break missingId;
      }

      id = R.id.item_count;
      TextView itemCount = ViewBindings.findChildViewById(rootView, id);
      if (itemCount == null) {
        break missingId;
      }

      id = R.id.item_count_label;
      TextView itemCountLabel = ViewBindings.findChildViewById(rootView, id);
      if (itemCountLabel == null) {
        break missingId;
      }

      id = R.id.item_name;
      TextView itemName = ViewBindings.findChildViewById(rootView, id);
      if (itemName == null) {
        break missingId;
      }

      id = R.id.item_price;
      TextView itemPrice = ViewBindings.findChildViewById(rootView, id);
      if (itemPrice == null) {
        break missingId;
      }

      id = R.id.sell_item;
      Button sellItem = ViewBindings.findChildViewById(rootView, id);
      if (sellItem == null) {
        break missingId;
      }

      return new FragmentItemDetailBinding((ConstraintLayout) rootView, deleteItem, editItem,
          itemCount, itemCountLabel, itemName, itemPrice, sellItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
